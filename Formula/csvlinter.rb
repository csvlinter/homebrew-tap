# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.6.0"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.6.0/csvlinter-darwin-amd64.tar.gz"
      sha256 "af95104bae7cf1a97348e247bd6ef72d7a879a17917dfb3378f3b595d3784da6"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.6.0/csvlinter-darwin-arm64.tar.gz"
      sha256 "b4b0fda8dbd386f9b4a076f032f58aab1aa386fc45a6210135832a10102cdb43"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.6.0/csvlinter-linux-amd64.tar.gz"
        sha256 "f7fe525b0abe917ee7d67ac64701f27c2c1d3d4195e04a47827ba4c6764c0e55"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.6.0/csvlinter-linux-arm64.tar.gz"
        sha256 "4651543e1c33ad751d9edf9376972115823638cce3ca712adc852a87125cfa10"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
