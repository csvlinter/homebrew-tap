# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.5.1"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.5.1/csvlinter-darwin-amd64.tar.gz"
      sha256 "5700d53c4493aae74bff282ed333df1b70c6f5f92c1e65d1a79f910245417dc6"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.5.1/csvlinter-darwin-arm64.tar.gz"
      sha256 "50fef7bccca02af627f31834870e5094f2ddbc980f2828a578d23d22b90b4446"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.5.1/csvlinter-linux-amd64.tar.gz"
        sha256 "e25786836b76fbb453082ca9afd21a761f419eff7a57ec327a5127ebe348b9f8"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.5.1/csvlinter-linux-arm64.tar.gz"
        sha256 "887ab7c149f147151f89a18bbb14359d2e2068a0d2176e3f752753e7690b801a"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
