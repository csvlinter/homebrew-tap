# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.7.1"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.1/csvlinter-darwin-amd64.tar.gz"
      sha256 "4df4fd95b106cd3c14b9421bbe82f759f4f266b5f599bfda298ae2ac0f14373f"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.1/csvlinter-darwin-arm64.tar.gz"
      sha256 "16c41d31fe5d77c6b80026159f433cbbde1af13849a5be7e6ad59cf7f185516e"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.1/csvlinter-linux-amd64.tar.gz"
        sha256 "7181f3bbccb33c23f41dfe6872fd724a53e2479997ea29ea5265533c97040bb4"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.1/csvlinter-linux-arm64.tar.gz"
        sha256 "6c92d4394dbe8c6f9f0054ced93a0eda1a22a15652b8e3524661bc88e0d86591"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
