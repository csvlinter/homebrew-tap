# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.3.5"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.3.5/csvlinter-darwin-amd64.tar.gz"
      sha256 "8ce4d125ea4367cfff9a66e049f78da65198f9e1038878250c09e6b5c31254c3"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.3.5/csvlinter-darwin-arm64.tar.gz"
      sha256 "cc2db9f8e8ec368a1875284c16963e25dc73cd6945649ada42e75b0f05b67160"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.3.5/csvlinter-linux-amd64.tar.gz"
        sha256 "94454c3831a88a28cfddf979cb26ffef77670252f374ec93677b0234262f2f60"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.3.5/csvlinter-linux-arm64.tar.gz"
        sha256 "bf2d02628115fff5146f332ded13d9a6a1eaadaf2842fefdaae8cd345b04ef69"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
