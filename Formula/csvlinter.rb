# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.4.0"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.4.0/csvlinter-darwin-amd64.tar.gz"
      sha256 "8573f57956bef21dacea30693f7da7029cdeea3b6b81cd8b0a397484406fd78a"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.4.0/csvlinter-darwin-arm64.tar.gz"
      sha256 "df29b73738ce6af68aec4d2c35143b5723f24ee70633894b7770e7a711a6feaf"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.4.0/csvlinter-linux-amd64.tar.gz"
        sha256 "352b489e783e5ea29867c6e52d5a40d40dfa21e149e257521011be36e8ffed7b"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.4.0/csvlinter-linux-arm64.tar.gz"
        sha256 "55dc80ace6b299c6bbda5b434bfb9f162098a776e9b0ec8c3422c2c8f1681094"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
