# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Csvlinter < Formula
  desc "Streaming CSV validator with JSON-Schema support"
  homepage "https://github.com/csvlinter/csvlinter"
  version "1.7.0"

  on_macos do
    on_intel do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.0/csvlinter-darwin-amd64.tar.gz"
      sha256 "2ede1e7dbb14097c646abe70c8f0e0f06cfeed81a9454d0dd46898d45409c9c3"

      def install
        bin.install "csvlinter"
      end
    end
    on_arm do
      url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.0/csvlinter-darwin-arm64.tar.gz"
      sha256 "90b789f3a38f95c58720c069933d0b76d9e6409dec2f44280a75aa894885d538"

      def install
        bin.install "csvlinter"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.0/csvlinter-linux-amd64.tar.gz"
        sha256 "720a246547d1b4ac3957b8a38df88969a56763b56a6f6960f6064be1567fe5bf"

        def install
          bin.install "csvlinter"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/csvlinter/csvlinter/releases/download/v1.7.0/csvlinter-linux-arm64.tar.gz"
        sha256 "eaf32c24cb4b6c79aff0b764aa7cd4bc4b4f90a92117abf5822d985024deb70b"

        def install
          bin.install "csvlinter"
        end
      end
    end
  end

  test do
    (testpath/"bad.csv").write("col\nbad")
    output = shell_output("#{bin}/csvlinter bad.csv", 1)
    assert_match "Row 2", output
  end
end
